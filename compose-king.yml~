volumes:
   baeldung_bff_keycloak_postgres_data:

services:

  nginx-reverse-proxy:
    container_name: ycbr.nginx-reverse-proxy
    image: ycbr/nginx-reverse-proxy
    ports:
    - 7080:7080
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "king:host-gateway"

  postgres:
    container_name: ycbr.db
    image: postgres:18-alpine
    restart: always
    environment:
      - POSTGRES_DB=ycbr
      - POSTGRES_PASSWORD=ycbr-secret
      - POSTGRES_USER=ycbr
      - PGUSER=ycbr
      - LANG=sv_FI.utf8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ycbr -U ycbr"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:
    - ${PWD}/db-data/:/var/lib/postgresql
#    - ${PWD}/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    container_name: ycbr.pgadmin
    image: dpage/pgadmin4
    ports:
      - 15433:80
    environment:
    - PGADMIN_DEFAULT_EMAIL=user@domain.com
    - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    depends_on:
      - postgres
#    networks:
#      - postgres-network
    volumes:
      - ${PWD}/pgadmin-data/:/var/lib/pgadmin/

#  postgres-keycloak:
#    container_name: postgres-keycloak
#    image: postgres:latest
#    environment:
#    - POSTGRES_DB=keycloak
#    - POSTGRES_PASSWORD=secret
#    - POSTGRES_USER=keycloak
#    volumes:
#    -  baeldung_bff_keycloak_postgres_data:/var/lib/postgresql/data
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready", "-d", "keycloak", "-U", "keycloak"]
#      interval: 3s
#      timeout: 60s
#      retries: 20
  
  keycloak:
    container_name: ycbr.auth
    image: quay.io/keycloak/keycloak:24.0.0
    command:
    - start-dev
    - --import-realm
    ports:
    - 8080:8080
    volumes:
      - ./keycloak/import/:/opt/keycloak/data/import/
    environment:
#      KC_DB: postgres
#      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak
#      KC_DB_SCHEMA: public
#      KC_DB_USERNAME: keycloak
#      KC_DB_PASSWORD: secret
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_URL: http://king:7080/auth
      KC_HOSTNAME_ADMIN_URL: http://king:7080/auth
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      #KC_HOSTNAME_DEBUG: true
      KC_HTTP_RELATIVE_PATH: /auth/
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      #KC_LOG_LEVEL: DEBUG
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "king:host-gateway"
#    depends_on:
#      postgres-keycloak:
#        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/auth/health/live']
      interval: 5s
      timeout: 5s
      retries: 20

#  react-ui:
#    container_name: ycbr.react-ui
#    image: ycbr/react-ui
#    ports:
#    - 4203:4203
#    extra_hosts:
#    - "host.docker.internal:host-gateway"
#    - "king:host-gateway"

  native-ui:
    container_name: ycbr.native-ui
    image: ycbr/native-ui
    ports:
      - 4204:4204
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "king:host-gateway"

#  nextjs-ui:
#    container_name: ycbr.nextjs-ui
#    image: ycbr/nextjs-ui
#    ports:
#      - 4205:4205
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#      - "king:host-gateway"

  tanstack-ui:
    container_name: ycbr.tanstack-ui
    image: ycbr/tanstack-ui
    ports:
      - 4206:80
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "king:host-gateway"

  resource-server:
    container_name: ycbr.resource-server
    image: ycbr/resource-server
    ports:
    - 7084:7084
    environment:
      HOSTNAME: king
      SERVER_ADDRESS: 0.0.0.0
    depends_on:
      keycloak:
        condition: service_healthy
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "king:host-gateway"

  api-server:
    container_name: ycbr.api-server
    image: ycbr/api-server
    ports:
    - 7085:7085
    environment:
      HOSTNAME: king
      SERVER_ADDRESS: 0.0.0.0
    depends_on:
      keycloak:
        condition: service_healthy
      postgres:
        condition: service_healthy
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "king:host-gateway"

  bff:
    container_name: ycbr.bff
    image: ycbr/bff
    ports:
    - 7081:7081
    environment:
      HOSTNAME: king
      SERVER_ADDRESS: 0.0.0.0
      CLIENT_SECRET: secret
    depends_on:
      keycloak:
        condition: service_healthy
    extra_hosts:
    - "host.docker.internal:host-gateway"
    - "king:host-gateway"
