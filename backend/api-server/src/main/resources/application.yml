scheme: http
hostname: localhost
reverse-proxy-port: 7080
reverse-proxy-uri: ${scheme}://${hostname}:${reverse-proxy-port}
authorization-server-prefix: /auth
issuer: ${reverse-proxy-uri}${authorization-server-prefix}/realms/ycbr
username-claim-json-path: $.preferred_username
authorities-json-path: $.realm_access.roles
resource-server-port: 7084
api-server-port: 7085
audience:

server:
  port: ${api-server-port}
  ssl:
    enabled: false

spring:
  datasource:
    username: ycbr
    password: ycbr-secret
    url: jdbc:postgresql://${hostname}:6543/ycbr
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 30
  r2dbc:
    host: ${hostname}
    port: 6543
    database: ycbr
    username: ycbr
    password: ycbr-secret
    pool:
      initial-size: 5
      max-size: 20
      max-idle-time: 60000 # ms

  liquibase:
    enabled: false
    change-log: classpath:/db/changelog/db.changelog-master.yaml
    url: jdbc:postgresql://${hostname}:6543/ycbr
    user: ycbr
    password: ycbr-secret

    # Uncomment to always re-apply changesets (useful during development)
    # Should be false in production!
    # should run only on first connection to avoid locking issues when multiple instances start simultaneously
    # run on startup, not on connection to avoid locking issues when multiple instances start simultaneously
    #run-on-startup: true
#  sql:
#    init:
#      mode: always


com:
  c4-soft:
    springaddons:
      oidc:
        ops:
        - iss: ${issuer}
          username-claim: ${username-claim-json-path}
          authorities:
          - path: ${authorities-json-path}
          aud: ${audience}
        resourceserver:
          permit-all:
          - /me
          - /v3/api-docs/**
          - /swagger-ui/**
          - /actuator/health/readiness
          - /actuator/health/liveness
          
management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    root: INFO
    org:
      springframework:
        boot: INFO
        security: INFO
        web: INFO
        
---
spring:
  config:
    activate:
      on-profile: "docker"
  datasource:
    url: jdbc:postgresql://${hostname}:5432/ycbr
server:
  port: 7085


---
spring:
  config:
    activate:
      on-profile: ssl
server:
  ssl:
    enabled: true
scheme: https

---
spring:
  config:
    activate:
      on-profile: cognito
issuer: https://cognito-idp.us-west-2.amazonaws.com/us-west-2_RzhmgLwjl
username-claim-json-path: username
authorities-json-path: $.cognito:groups

---
spring:
  config:
    activate:
      on-profile: auth0
issuer: https://dev-ch4mpy.eu.auth0.com/
username-claim-json-path: $['https://c4-soft.com/user']['name']
authorities-json-path: $['https://c4-soft.com/user']['roles']
audience: bff.baeldung.com